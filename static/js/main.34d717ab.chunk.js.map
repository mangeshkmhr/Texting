{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextFormm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalized","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","toggleMode","htmlFor","TextFormm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","trim","defaultProps","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","body","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.34d717ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const Capitalized =(word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n   \r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{Capitalized(props.alert.type)}</strong>:{props.alert.msg}\r\n            \r\n        </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode} `}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'} mx-3`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string };\r\n\r\nNavbar.defaultProps = { title: \"Set The Title\" };\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextFormm(props) {\r\n    const [text, setText] = useState('');\r\n    \r\n    const handleUpClick = ()=> {    \r\n        // console.log('Uppercase Text ' +text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to Uppercase Text\",\"success\");\r\n    }\r\n    const handleLoClick = ()=> {    \r\n       \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to Lowercase Text\",\"success\");\r\n    }\r\n    const CopyText = ()=> {    \r\n       \r\n        let text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\" Copied text to Clipboard\",\"success\");\r\n      \r\n        \r\n    }\r\n    const handleClearClick = ()=> {    \r\n       \r\n        let newText = ('');\r\n        setText(newText);\r\n        props.showAlert(\" Text Cleared\",\"success\");\r\n        \r\n    }\r\n    const HandleSpaces = ()=> {    \r\n       \r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const handleOnChange = (event)=> {    \r\n        // console.log('Onchage')\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode === 'dark'?'white':'#280d25'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark'?'grey':'white',color:props.mode === 'dark'?'white':'#280d25'}} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={CopyText}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={HandleSpaces}>Remove Extra Spaces </button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#280d25'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.length===0?0:text.trim().split(/[ ]+/).length} words and {text.length===0?0:text.trim().length} characters.</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read.</p>\r\n            <p>{text.split(\"\\n\").length} number of Line.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter Something In Above TextArea To Preview\"}</p>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextFormm from \"./Components/TextFormm\";\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n \n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode]=useState('light');\n  \n  const [alert,setAlert]= useState(null);\n\n  const showAlert=(message,type)=> {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=> {\n    if (mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor= '#280d25';\n      showAlert(\" Dark Mode has been Enabled\",\"success\");\n      document.title = \"TextWorkspace - Dark Mode\";\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\" Light bbMode has been Enabled\",\"success\");\n      document.title = \"TextWorkspace - Light Mode\";\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextWorkspace\" mode={mode} toggleMode={toggleMode} />\n     <Alert alert={alert}/>\n     \n      <div className=\"container my-3\">\n      {/* <Routes> */}\n      {/* <Route exact path=\"/\" element={<TextFormm showAlert={showAlert} heading=\"Enter the text here\" mode={mode}/> }/>\n      <Route path=\"/about\" element={<About/>}/> */}\n      <TextFormm showAlert={showAlert} heading=\"Enter the text here\" mode={mode}/>\n         \n      {/* </Routes> */}\n      \n      </div>\n       {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}